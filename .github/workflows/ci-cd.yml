# Copyright Jiaqi (Hutao of Emberfire)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: CI/CD

"on":
  pull_request:
  push:
    branches:
      - master

jobs:
  yaml-lint:
    name: YAML Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actionshub/yamllint@main

  markdown-lint:
    name: Markdown Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actionshub/markdownlint@main

  linkChecker:
    name: Link Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Link Checker
        uses: lycheeverse/lychee-action@v1.9.0
        with:
          fail: true

  code-style:
    name: Python Code Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: PEP 8 check
        run: python setup.py pep8
      - name: Check import orders
        run: python setup.py isort

  unit-tests:
    name: Unit Tests
    needs: [yaml-lint, markdown-lint, linkChecker, code-style]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Run tests
        run: python setup.py test
        env:
          NEO4J_URI: test_NEO4J_URI
          NEO4J_DATABASE: test_NEO4J_DATABASE
          NEO4J_USERNAME: test_NEO4J_USERNAME
          NEO4J_PASSWORD: test_NEO4J_PASSWORD

  integration-tests:
    name: Integration Tests
    needs: unit-tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [
          {
            name: German,
            loader: german_loader,
            yaml-file: german.yaml
          },
          {
            name: Ancient Greek,
            loader: latin_loader,
            yaml-file: latin.yaml
          },
          {
            name: Latin,
            loader: ancient_greek_loader,
            yaml-file: ancient-greek.yaml
          }
        ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Startup a Neo4J database
        run: docker run --publish=7474:7474 --publish=7687:7687 --env=NEO4J_AUTH=none neo4j &
      - name: Wait for database to be ready
        uses: iFaxity/wait-on-action@v1
        with:
          resource: http://localhost:7474
      - name: Install wilhelm-python-sdk locally
        run: pip3 install -e .
      - name: Test loading ${{ matrix.language.name }}
        run: |
          git clone https://github.com/QubitPi/wilhelm-vocabulary.git
          cd wilhelm-vocabulary
          printf "from wilhelm_python_sdk.${{ matrix.language.loader }} import load_into_database\n\nload_into_database(\"${{ matrix.language.yaml-file }}\")" > test_load.py
          python3 test_load.py
        env:
          NEO4J_URI: neo4j://localhost:7687
          NEO4J_DATABASE: neo4j
          NEO4J_USERNAME: not used
          NEO4J_PASSWORD: not used

  package:
    name: Test Package Build
    needs: integration-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Test dist build
        run: python setup.py sdist

  push-release-tag:
    needs: package
    if: github.ref == 'refs/heads/master'
    uses: QubitPi/hashistack/.github/workflows/version-bump.yml@master
    with:
      user: QubitPi
      email: jack20220723@gmail.com

  release:
    name: Publish Python SDK To PyPI
    if: github.ref == 'refs/heads/master'
    needs: push-release-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Bump version
        run: |
          git pull
          VERSION=$(git describe)
          echo "INFO Last tag: $VERSION"
          sed -i "s/    version=\"0.0.1\",/    version=\"$VERSION\",/" setup.py
      - name: Package up SDK
        run: python setup.py sdist
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
